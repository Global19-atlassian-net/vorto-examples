sudo: required
dist: trusty

jobs:
  include:
    - stage: deploy-dashboard-aws
      name: "Deploys the Vorto-Dashboard to AWS Beanstalk"
      language: node_js
      node_js:
        - 6.9.1
      before_script:
      script:
      before_install:
        - cd vorto-dashboard
      before_deploy:
        - rm -rf .tmp
        - rm -rf .DS_Store
        - rm -rf node_modules
        - export ELASTIC_BEANSTALK_ENV=vorto-dashboard-${TRAVIS_BRANCH}
        - zip -r --exclude=\*.git\* --exclude=\*.DS_Store\* --exclude=\*test\  vorto-dashboard.zip .
        - export ELASTIC_BEANSTALK_LABEL=git-$(git rev-parse --verify HEAD --short)
        - export ELASTIC_BEANSTALK_DESCRIPTION="Build-Job ${TRAVIS_JOB_NUMBER} - Git Revision ${TRAVIS_COMMIT_SHORT} vorto-dashboard "
      after_deploy:
        - rm vorto-dashboard.zip
      deploy:
        provider: elasticbeanstalk
        access_key_id: "$VORTO_AWS_ACCESS_KEY"
        secret_access_key: "$VORTO_AWS_SECRET_KEY"
        zip-file: vorto-dashboard.zip
        skip_cleanup: true
        region: "$VORTO_S3_REGION"
        app: "Vorto Dashboard"
        env: "VortoDashboard-dev"
        only_create_app_version: false
        bucket_name: "$VORTO_S3_BUCKET"
      
    - stage: deploy-npm
      name: "Publish Vorto-Dashboard to NPM"
      language: node_js
      node_js:
        - '10'
        
      cache:
        yarn: true
        directories:
          - ~/.cache
      
      before_install:
        - cd vorto-dashboard
      
      install:
        - echo "Installing dependencies"
        - yarn install
      
      after_success:
        - echo "Creating build"
        - npm run build
        - npm run dist
        
      before_deploy:
        - echo "Preparing for deploy to NPM" 
        - cd dist
        
      deploy:
        provider: npm
        skip_cleanup: true
        email: Alexander.Edelmann@bosch-si.com
        api_key:
          secure: $NPM_API_TOKEN
        on:
          tags: true
          branches:
            only:
              - master
  

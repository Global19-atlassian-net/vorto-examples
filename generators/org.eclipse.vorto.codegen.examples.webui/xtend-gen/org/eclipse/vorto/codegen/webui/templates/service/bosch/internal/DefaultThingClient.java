package org.eclipse.vorto.codegen.webui.templates.service.bosch.internal;

import org.eclipse.vorto.codegen.api.IFileTemplate;
import org.eclipse.vorto.codegen.api.InvocationContext;
import org.eclipse.vorto.codegen.webui.templates.TemplateUtils;
import org.eclipse.vorto.core.api.model.informationmodel.InformationModel;
import org.eclipse.xtend2.lib.StringConcatenation;

@SuppressWarnings("all")
public class DefaultThingClient implements IFileTemplate<InformationModel> {
  @Override
  public String getFileName(final InformationModel context) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("DefaultThingClient.java");
    return _builder.toString();
  }
  
  @Override
  public String getPath(final InformationModel context) {
    StringConcatenation _builder = new StringConcatenation();
    String _baseApplicationPath = TemplateUtils.getBaseApplicationPath(context);
    _builder.append(_baseApplicationPath, "");
    _builder.append("/service/bosch/internal");
    return _builder.toString();
  }
  
  @Override
  public String getContent(final InformationModel element, final InvocationContext context) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package com.example.iot.");
    String _name = element.getName();
    String _lowerCase = _name.toLowerCase();
    _builder.append(_lowerCase, "");
    _builder.append(".service.bosch.internal;");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("import java.util.concurrent.CompletableFuture;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.apache.http.client.config.RequestConfig;");
    _builder.newLine();
    _builder.append("import org.apache.http.client.methods.HttpGet;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import com.example.iot.");
    String _name_1 = element.getName();
    String _lowerCase_1 = _name_1.toLowerCase();
    _builder.append(_lowerCase_1, "");
    _builder.append(".service.bosch.ThingClient;");
    _builder.newLineIfNotEmpty();
    _builder.append("import com.example.iot.");
    String _name_2 = element.getName();
    String _lowerCase_2 = _name_2.toLowerCase();
    _builder.append(_lowerCase_2, "");
    _builder.append(".service.bosch.internal.model.ThingImpl;");
    _builder.newLineIfNotEmpty();
    _builder.append("import com.example.iot.");
    String _name_3 = element.getName();
    String _lowerCase_3 = _name_3.toLowerCase();
    _builder.append(_lowerCase_3, "");
    _builder.append(".service.bosch.internal.model.ThingSearchResultImpl;");
    _builder.newLineIfNotEmpty();
    _builder.append("import com.example.iot.");
    String _name_4 = element.getName();
    String _lowerCase_4 = _name_4.toLowerCase();
    _builder.append(_lowerCase_4, "");
    _builder.append(".service.bosch.model.Thing;");
    _builder.newLineIfNotEmpty();
    _builder.append("import com.example.iot.");
    String _name_5 = element.getName();
    String _lowerCase_5 = _name_5.toLowerCase();
    _builder.append(_lowerCase_5, "");
    _builder.append(".service.bosch.model.ThingSearchResult;");
    _builder.newLineIfNotEmpty();
    _builder.append("import com.google.gson.reflect.TypeToken;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class DefaultThingClient implements ThingClient {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String thingRestUrl;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private RequestConfig requestConfig;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private ThingsInvocationTemplate restTemplate;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public DefaultThingClient(String thingRestUrl, ThingsInvocationTemplate template, RequestConfig config) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.thingRestUrl = thingRestUrl;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.requestConfig = config;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.restTemplate = template;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public CompletableFuture<ThingSearchResult> searchThings(String query) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("HttpGet getAllThings = new HttpGet(String.format(\"%s/api/2/search/things?%s\", this.thingRestUrl, query));");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (requestConfig != null) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("getAllThings.setConfig(requestConfig);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return restTemplate.execute(getAllThings,new TypeToken<ThingSearchResultImpl>(){}.getType());");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public CompletableFuture<Thing> getThing(String thingId) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("HttpGet getThing = new HttpGet(String.format(\"%s/api/2/things/%s\", this.thingRestUrl, thingId));");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (requestConfig != null) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("getThing.setConfig(requestConfig);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("CompletableFuture<Thing> result = restTemplate.execute(getThing,new TypeToken<ThingImpl>(){}.getType());");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return result;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    return _builder.toString();
  }
}

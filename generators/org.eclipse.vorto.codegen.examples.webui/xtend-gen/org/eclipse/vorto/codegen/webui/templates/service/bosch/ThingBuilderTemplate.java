package org.eclipse.vorto.codegen.webui.templates.service.bosch;

import org.eclipse.vorto.codegen.api.IFileTemplate;
import org.eclipse.vorto.codegen.api.InvocationContext;
import org.eclipse.vorto.codegen.webui.templates.TemplateUtils;
import org.eclipse.vorto.core.api.model.informationmodel.InformationModel;
import org.eclipse.xtend2.lib.StringConcatenation;

@SuppressWarnings("all")
public class ThingBuilderTemplate implements IFileTemplate<InformationModel> {
  @Override
  public String getFileName(final InformationModel context) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("ThingBuilder.java");
    return _builder.toString();
  }
  
  @Override
  public String getPath(final InformationModel context) {
    StringConcatenation _builder = new StringConcatenation();
    String _baseApplicationPath = TemplateUtils.getBaseApplicationPath(context);
    _builder.append(_baseApplicationPath, "");
    _builder.append("/service/bosch");
    return _builder.toString();
  }
  
  @Override
  public String getContent(final InformationModel element, final InvocationContext context) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package com.example.iot.");
    String _name = element.getName();
    String _lowerCase = _name.toLowerCase();
    _builder.append(_lowerCase, "");
    _builder.append(".service.bosch;");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("import java.util.Date;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import com.example.iot.");
    String _name_1 = element.getName();
    String _lowerCase_1 = _name_1.toLowerCase();
    _builder.append(_lowerCase_1, "");
    _builder.append(".service.bosch.internal.model.FeatureImpl;");
    _builder.newLineIfNotEmpty();
    _builder.append("import com.example.iot.");
    String _name_2 = element.getName();
    String _lowerCase_2 = _name_2.toLowerCase();
    _builder.append(_lowerCase_2, "");
    _builder.append(".service.bosch.internal.model.ThingImpl;");
    _builder.newLineIfNotEmpty();
    _builder.append("import com.example.iot.");
    String _name_3 = element.getName();
    String _lowerCase_3 = _name_3.toLowerCase();
    _builder.append(_lowerCase_3, "");
    _builder.append(".service.bosch.model.Feature;");
    _builder.newLineIfNotEmpty();
    _builder.append("import com.example.iot.");
    String _name_4 = element.getName();
    String _lowerCase_4 = _name_4.toLowerCase();
    _builder.append(_lowerCase_4, "");
    _builder.append(".service.bosch.model.Thing;");
    _builder.newLineIfNotEmpty();
    _builder.append("import com.google.gson.Gson;");
    _builder.newLine();
    _builder.append("import com.google.gson.GsonBuilder;");
    _builder.newLine();
    _builder.append("import com.google.gson.reflect.TypeToken;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class ThingBuilder {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private ThingImpl thing;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public ThingBuilder() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.thing = new ThingImpl();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.thing.getAttributes().put(ThingImpl.ATTRIBUTE_CREATEDON, Thing.JSON_DATE_FORMAT.format(new Date()));");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public ThingBuilder fromThing(com.bosch.cr.model.things.Thing thing) {\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("String json = thing.toJson().toString();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Gson gson = new GsonBuilder().create();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.thing = gson.fromJson(json, new TypeToken<ThingImpl>(){}.getType());");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return this;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public ThingBuilder withThingId(String thingId) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.thing.setThingId(thingId);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return this;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public ThingBuilder withThingId(String namespace, String deviceId) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("StringBuilder builder = new StringBuilder();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("builder.append(namespace);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("builder.append(\":\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("builder.append(deviceId);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return withThingId(builder.toString());");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public ThingBuilder withCreationBy(String userId) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.thing.getAttributes().put(ThingImpl.ATTRIBUTE_CREATEDBY, userId);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return this;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public ThingBuilder withThingName(String thingName) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.thing.getAttributes().put(ThingImpl.ATTRIBUTE_NAME, thingName);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return this;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public ThingBuilder withDeviceId(String deviceId) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.thing.getAttributes().put(ThingImpl.ATTRIBUTE_DEVICEID, deviceId);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return this;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public ThingBuilder withFeature(Feature feature) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.thing.getFeatures().put(feature.getId(), ((FeatureImpl)feature).getContent());");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return this;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public Thing build() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return this.thing;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    return _builder.toString();
  }
}

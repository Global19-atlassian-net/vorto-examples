/**
 * Copyright (c) 2015-2016 Bosch Software Innovations GmbH and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * and Eclipse Distribution License v1.0 which accompany this distribution.
 * 
 * The Eclipse Public License is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * The Eclipse Distribution License is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 * 
 * Contributors:
 * Bosch Software Innovations GmbH - Please refer to git log
 */
package org.eclipse.vorto.codegen.kura.templates.bluetooth;

import org.eclipse.emf.common.util.EList;
import org.eclipse.vorto.codegen.api.IFileTemplate;
import org.eclipse.vorto.codegen.api.InvocationContext;
import org.eclipse.vorto.codegen.kura.templates.Utils;
import org.eclipse.vorto.core.api.model.functionblock.FunctionblockModel;
import org.eclipse.vorto.core.api.model.informationmodel.FunctionblockProperty;
import org.eclipse.vorto.core.api.model.informationmodel.InformationModel;
import org.eclipse.vorto.core.api.model.model.ModelId;
import org.eclipse.vorto.core.api.model.model.ModelIdFactory;
import org.eclipse.vorto.core.api.model.model.ModelReference;
import org.eclipse.vorto.core.api.model.model.ModelType;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.xbase.lib.StringExtensions;

/**
 * @author Alexander Edelmann
 */
@SuppressWarnings("all")
public class DeviceTemplate implements IFileTemplate<InformationModel> {
  @Override
  public String getFileName(final InformationModel context) {
    StringConcatenation _builder = new StringConcatenation();
    String _name = context.getName();
    _builder.append(_name, "");
    _builder.append("Device.java");
    return _builder.toString();
  }
  
  @Override
  public String getPath(final InformationModel context) {
    StringConcatenation _builder = new StringConcatenation();
    String _javaPackageBasePath = Utils.getJavaPackageBasePath(context);
    _builder.append(_javaPackageBasePath, "");
    return _builder.toString();
  }
  
  @Override
  public String getContent(final InformationModel element, final InvocationContext context) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package ");
    String _javaPackage = Utils.getJavaPackage(element);
    _builder.append(_javaPackage, "");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("import org.eclipse.kura.KuraException;");
    _builder.newLine();
    _builder.append("import org.eclipse.kura.bluetooth.BluetoothDevice;");
    _builder.newLine();
    _builder.append("import org.eclipse.kura.bluetooth.BluetoothGatt;");
    _builder.newLine();
    _builder.append("import org.eclipse.kura.bluetooth.BluetoothGattSecurityLevel;");
    _builder.newLine();
    _builder.append("import org.eclipse.kura.bluetooth.BluetoothLeNotificationListener;");
    _builder.newLine();
    _builder.append("import org.slf4j.Logger;");
    _builder.newLine();
    _builder.append("import org.slf4j.LoggerFactory;");
    _builder.newLine();
    _builder.newLine();
    {
      EList<ModelReference> _references = element.getReferences();
      for(final ModelReference reference : _references) {
        ModelId modelId = ModelIdFactory.newInstance(ModelType.Functionblock, reference);
        _builder.newLineIfNotEmpty();
        _builder.append("import ");
        String _javaPackage_1 = Utils.getJavaPackage(element);
        _builder.append(_javaPackage_1, "");
        _builder.append(".cloud.");
        String _name = modelId.getName();
        _builder.append(_name, "");
        _builder.append(";");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.newLine();
    _builder.append("public class ");
    String _name_1 = element.getName();
    _builder.append(_name_1, "");
    _builder.append("Device implements BluetoothLeNotificationListener {");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private static final Logger logger = LoggerFactory.getLogger(");
    String _name_2 = element.getName();
    _builder.append(_name_2, "\t");
    _builder.append("Device.class);");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private BluetoothGatt bluetoothGatt;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private BluetoothDevice device;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private boolean isConnected;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public ");
    String _name_3 = element.getName();
    _builder.append(_name_3, "\t");
    _builder.append("Device(BluetoothDevice bluetoothDevice) {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("this.device = bluetoothDevice;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.isConnected = false;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void onDataReceived(String handle, String value) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (checkHandleIf");
    String _name_4 = element.getName();
    _builder.append(_name_4, "\t\t");
    _builder.append("(handle)) {");
    _builder.newLineIfNotEmpty();
    _builder.append("            ");
    _builder.append("logger.info(\"Received ");
    String _name_5 = element.getName();
    _builder.append(_name_5, "            ");
    _builder.append(" data: \" + value);");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private boolean checkHandleIf");
    String _name_6 = element.getName();
    _builder.append(_name_6, "\t");
    _builder.append("(String handle) {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("return false;//TODO: add condition to check if data comes from ");
    String _name_7 = element.getName();
    _builder.append(_name_7, "\t\t");
    _builder.append(" device");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void disconnect() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (this.bluetoothGatt != null) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("this.bluetoothGatt.disconnect();");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("this.isConnected = false;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public BluetoothDevice getBluetoothDevice() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return this.device;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void setBluetoothDevice(BluetoothDevice device) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.device = device;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public boolean isConnected() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.isConnected = checkConnection();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return this.isConnected;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public boolean checkConnection() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (this.bluetoothGatt != null) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("boolean connected = false;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("try {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("connected = this.bluetoothGatt.checkConnection();");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("} catch (KuraException e) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("logger.error(e.toString());");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("if (connected) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("this.isConnected = true;");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("return true;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("} else {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("// If connect command is not executed, close gatttool");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("this.bluetoothGatt.disconnect();");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("this.isConnected = false;");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("return false;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("} else {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("this.isConnected = false;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("return false;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void setSecurityLevel(BluetoothGattSecurityLevel level) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (this.bluetoothGatt != null) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("this.bluetoothGatt.setSecurityLevel(level);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public BluetoothGattSecurityLevel getSecurityLevel() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("BluetoothGattSecurityLevel level = BluetoothGattSecurityLevel.UNKNOWN;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("try {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("if (this.bluetoothGatt != null) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("level = this.bluetoothGatt.getSecurityLevel();");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("} catch (KuraException e) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("logger.error(\"Get security level failed\", e);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return level;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    {
      EList<FunctionblockProperty> _properties = element.getProperties();
      for(final FunctionblockProperty fbProperty : _properties) {
        _builder.append("\t");
        _builder.append("public ");
        FunctionblockModel _type = fbProperty.getType();
        String _name_8 = _type.getName();
        _builder.append(_name_8, "\t");
        _builder.append(" read");
        String _name_9 = fbProperty.getName();
        String _firstUpper = StringExtensions.toFirstUpper(_name_9);
        _builder.append(_firstUpper, "\t");
        _builder.append("() {");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("\t");
        FunctionblockModel _type_1 = fbProperty.getType();
        String _name_10 = _type_1.getName();
        _builder.append(_name_10, "\t\t");
        _builder.append(" ");
        String _name_11 = fbProperty.getName();
        _builder.append(_name_11, "\t\t");
        _builder.append(" = new ");
        FunctionblockModel _type_2 = fbProperty.getType();
        String _name_12 = _type_2.getName();
        _builder.append(_name_12, "\t\t");
        _builder.append("();");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("try {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t\t");
        _builder.append("//TODO: insert code that reads ");
        String _name_13 = fbProperty.getName();
        _builder.append(_name_13, "\t\t\t");
        _builder.append(" and converts into ");
        FunctionblockModel _type_3 = fbProperty.getType();
        String _name_14 = _type_3.getName();
        _builder.append(_name_14, "\t\t\t");
        _builder.append(" object");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("\t\t");
        _builder.append("String value = this.bluetoothGatt.readCharacteristicValue(\"\");");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t\t");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("} catch (KuraException e) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t\t ");
        _builder.append("logger.error(e.toString());");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("return ");
        String _name_15 = fbProperty.getName();
        _builder.append(_name_15, "\t\t");
        _builder.append(";");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("public void enable");
        String _name_16 = fbProperty.getName();
        String _firstUpper_1 = StringExtensions.toFirstUpper(_name_16);
        _builder.append(_firstUpper_1, "\t");
        _builder.append("() {");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("//TODO: Insert code here to enable ");
        String _name_17 = fbProperty.getName();
        _builder.append(_name_17, "\t\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("this.bluetoothGatt.writeCharacteristicValue(\"\", \"\");");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public boolean connect(String adapterName) {");
    _builder.newLine();
    _builder.append("\t\t ");
    _builder.append("this.bluetoothGatt = this.device.getBluetoothGatt();");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("boolean connected = false;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("try {");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("connected = this.bluetoothGatt.connect(adapterName);");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("} catch (KuraException e) {");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("logger.error(e.toString());");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("if (connected) {");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("this.bluetoothGatt.setBluetoothLeNotificationListener(this);");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("this.isConnected = true;");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("return true;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("} else {");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("// If connect command is not executed, close gatttool");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("this.bluetoothGatt.disconnect();");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("this.isConnected = false;");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("return false;");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public String getResourceId() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("//TODO: insert code that reads technical device id from the device");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return getBluetoothDevice().getAdress();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    return _builder.toString();
  }
}

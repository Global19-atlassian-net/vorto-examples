/**
 * Copyright (c) 2015 Bosch Software Innovations GmbH and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * and Eclipse Distribution License v1.0 which accompany this distribution.
 * 
 * The Eclipse Public License is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * The Eclipse Distribution License is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 * 
 * Contributors:
 * Bosch Software Innovations GmbH - Please refer to git log
 */
package org.eclipse.vorto.codegen.coap.server.templates;

import org.eclipse.vorto.codegen.api.IFileTemplate;
import org.eclipse.vorto.codegen.api.InvocationContext;
import org.eclipse.vorto.core.api.model.informationmodel.InformationModel;
import org.eclipse.xtend2.lib.StringConcatenation;

@SuppressWarnings("all")
public class ResourceTemplate implements IFileTemplate<InformationModel> {
  private String targetPath;
  
  private String classPackage;
  
  private String imports;
  
  public ResourceTemplate(final String targetPath, final String classPackage, final String imports) {
    this.targetPath = targetPath;
    this.classPackage = classPackage;
    this.imports = imports;
  }
  
  @Override
  public String getFileName(final InformationModel context) {
    return "Resource.java";
  }
  
  @Override
  public String getPath(final InformationModel context) {
    return this.targetPath;
  }
  
  @Override
  public String getContent(final InformationModel context, final InvocationContext invocationContext) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package ");
    _builder.append(this.classPackage, "");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.eclipse.californium.core.CoapResource;");
    _builder.newLine();
    _builder.append("import org.eclipse.californium.core.coap.CoAP;");
    _builder.newLine();
    _builder.append("import org.eclipse.californium.core.coap.LinkFormat;");
    _builder.newLine();
    _builder.append("import org.eclipse.californium.core.network.Exchange;");
    _builder.newLine();
    _builder.append("import org.eclipse.californium.core.server.resources.CoapExchange;");
    _builder.newLine();
    _builder.append("import ");
    _builder.append(this.imports, "");
    _builder.append(".*;");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("import java.util.Collection;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import static org.eclipse.californium.core.coap.CoAP.ResponseCode.INTERNAL_SERVER_ERROR;");
    _builder.newLine();
    _builder.append("import static org.eclipse.californium.core.coap.CoAP.ResponseCode.METHOD_NOT_ALLOWED;");
    _builder.newLine();
    _builder.append("import static org.eclipse.californium.core.coap.CoAP.Type.NON;");
    _builder.newLine();
    _builder.append("import static org.eclipse.californium.core.coap.MediaTypeRegistry.APPLICATION_LINK_FORMAT;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class Resource extends CoapResource {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("private ICoAPRequestHandler handler;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("private Configuration config;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public Resource(String name, Configuration config, ICoAPRequestHandler handler) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("super(name);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("this.config = config;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("this.handler = handler;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("if (config.isObserve()) {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("setObservable(true);");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("setObserveType(NON);");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public void handleRequest(Exchange exchange) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("final CoapExchange coapExchange = new CoapExchange(exchange, this);");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("CoAP.Code code = exchange.getRequest().getCode();");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("switch (code) {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("case GET:");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("if (config.isGet() || config.isObserve()) {");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("forwardRequest(coapExchange);");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("} else if (config.isDiscover()) {");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("discover(coapExchange);");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("} else {");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("coapExchange.respond(METHOD_NOT_ALLOWED);");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("break;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("case POST:");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("if (config.isPost()) {");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("forwardRequest(coapExchange);");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("} else {");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("coapExchange.respond(METHOD_NOT_ALLOWED);");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("break;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("case PUT:");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("if (config.isPut()) {");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("forwardRequest(coapExchange);");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("} else {");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("coapExchange.respond(METHOD_NOT_ALLOWED);");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("break;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("case DELETE:");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("if (config.isDelete()) {");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("forwardRequest(coapExchange);");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("} else {");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("coapExchange.respond(METHOD_NOT_ALLOWED);");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("private void forwardRequest(CoapExchange exchange) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("try {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("handler.onRequest(exchange, this.getURI());");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("} catch (Exception e) {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("LOGGER.severe(this.getClass().getName() + \": \" + this.getName() + \" Caused exception: \" + e.toString());");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("exchange.respond(INTERNAL_SERVER_ERROR);");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("private void discover(CoapExchange exchange) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("final Collection<org.eclipse.californium.core.server.resources.Resource> children = this.getChildren();");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("StringBuilder sb = new StringBuilder();");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("for (org.eclipse.californium.core.server.resources.Resource child : children) {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("sb.append(LinkFormat.serializeResource(child));");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("exchange.respond(CoAP.ResponseCode.CONTENT, sb.toString(), APPLICATION_LINK_FORMAT);");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("* Configuration specifies which aspects of the SOME/IP Field are allowed (Get, Set, Event)");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public static class Configuration {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("private boolean get;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("private boolean put;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("private boolean post;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("private boolean delete;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("private boolean discover;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("private boolean observe;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("public Configuration(boolean get, boolean put, boolean post, boolean delete, boolean discover, boolean");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("observe) {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("this.get = get;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("this.put = put;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("this.post = post;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("this.delete = delete;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("this.discover = discover;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("this.observe = observe;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("public boolean isGet() {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("return get;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("public boolean isPut() {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("return put;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("public boolean isPost() {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("return post;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("public boolean isDelete() {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("return delete;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("public boolean isDiscover() {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("return discover;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("public boolean isObserve() {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("return observe;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder.toString();
  }
}

/**
 * Copyright (c) 2015 Bosch Software Innovations GmbH and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * and Eclipse Distribution License v1.0 which accompany this distribution.
 * 
 * The Eclipse Public License is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * The Eclipse Distribution License is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 * 
 * Contributors:
 * Bosch Software Innovations GmbH - Please refer to git log
 */
package org.eclipse.vorto.codegen.coap.common.templates;

import org.eclipse.emf.common.util.EList;
import org.eclipse.vorto.codegen.api.ITemplate;
import org.eclipse.vorto.codegen.api.InvocationContext;
import org.eclipse.vorto.codegen.coap.CoAPUtils;
import org.eclipse.vorto.core.api.model.functionblock.Operation;
import org.eclipse.vorto.core.api.model.functionblock.Param;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.xbase.lib.StringExtensions;

@SuppressWarnings("all")
public class JavaFBOperationParamSetTemplate implements ITemplate<Operation> {
  private String className;
  
  private String classPackage;
  
  private String[] imports;
  
  public JavaFBOperationParamSetTemplate(final String className, final String classPackage, final String[] imports) {
    this.className = className;
    this.classPackage = classPackage;
    this.imports = imports;
  }
  
  @Override
  public String getContent(final Operation op, final InvocationContext invocationContext) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("/*");
    _builder.newLine();
    _builder.append("*****************************************************************************************");
    _builder.newLine();
    _builder.append("* The present code has been generated by the Eclipse Vorto CoAP Code Generator.");
    _builder.newLine();
    _builder.append("*");
    _builder.newLine();
    _builder.append("* The basis for the generation was the Information Model which is uniquely identified by:");
    _builder.newLine();
    _builder.append("* Name:\t\t\t");
    String _name = op.getName();
    _builder.append(_name, "");
    _builder.newLineIfNotEmpty();
    _builder.append("* Namespace:\t");
    _builder.append(this.classPackage, "");
    _builder.newLineIfNotEmpty();
    _builder.append("* Version:\t\t");
    _builder.newLine();
    _builder.append("*****************************************************************************************");
    _builder.newLine();
    _builder.append("*/");
    _builder.newLine();
    _builder.newLine();
    _builder.append("package ");
    _builder.append(this.classPackage, "");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    {
      for(final String imprt : this.imports) {
        _builder.append("import ");
        _builder.append(imprt, "");
        _builder.append(".*;");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.newLine();
    _builder.append("public class ");
    String _firstUpper = StringExtensions.toFirstUpper(this.className);
    _builder.append(_firstUpper, "");
    _builder.append(" {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.newLine();
    {
      EList<Param> _params = op.getParams();
      for(final Param param : _params) {
        _builder.append("\t");
        _builder.append("private ");
        String _parameterTypeAsString = CoAPUtils.getParameterTypeAsString(param);
        _builder.append(_parameterTypeAsString, "\t");
        _builder.append(" ");
        String _name_1 = param.getName();
        _builder.append(_name_1, "\t");
        _builder.append(";");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.newLine();
      }
    }
    {
      EList<Param> _params_1 = op.getParams();
      for(final Param param_1 : _params_1) {
        _builder.append("\t");
        _builder.append("public ");
        String _parameterTypeAsString_1 = CoAPUtils.getParameterTypeAsString(param_1);
        _builder.append(_parameterTypeAsString_1, "\t");
        _builder.append(" get");
        String _name_2 = param_1.getName();
        String _firstUpper_1 = StringExtensions.toFirstUpper(_name_2);
        _builder.append(_firstUpper_1, "\t");
        _builder.append("() {");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("return ");
        String _name_3 = param_1.getName();
        _builder.append(_name_3, "\t\t");
        _builder.append(";");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("public void set");
        String _name_4 = param_1.getName();
        String _firstUpper_2 = StringExtensions.toFirstUpper(_name_4);
        _builder.append(_firstUpper_2, "\t");
        _builder.append("(");
        String _parameterTypeAsString_2 = CoAPUtils.getParameterTypeAsString(param_1);
        _builder.append(_parameterTypeAsString_2, "\t");
        _builder.append(" ");
        String _name_5 = param_1.getName();
        _builder.append(_name_5, "\t");
        _builder.append(") {");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("this.");
        String _name_6 = param_1.getName();
        _builder.append(_name_6, "\t\t");
        _builder.append(" = ");
        String _name_7 = param_1.getName();
        _builder.append(_name_7, "\t\t");
        _builder.append("; ");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("}");
    _builder.newLine();
    return _builder.toString();
  }
}

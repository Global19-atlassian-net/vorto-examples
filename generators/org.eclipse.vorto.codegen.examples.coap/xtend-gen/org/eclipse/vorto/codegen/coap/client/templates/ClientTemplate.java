/**
 * Copyright (c) 2015 Bosch Software Innovations GmbH and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * and Eclipse Distribution License v1.0 which accompany this distribution.
 * 
 * The Eclipse Public License is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * The Eclipse Distribution License is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 * 
 * Contributors:
 * Bosch Software Innovations GmbH - Please refer to git log
 */
package org.eclipse.vorto.codegen.coap.client.templates;

import org.eclipse.vorto.codegen.api.IFileTemplate;
import org.eclipse.vorto.codegen.api.InvocationContext;
import org.eclipse.vorto.core.api.model.informationmodel.InformationModel;
import org.eclipse.xtend2.lib.StringConcatenation;

@SuppressWarnings("all")
public class ClientTemplate implements IFileTemplate<InformationModel> {
  private String targetPath;
  
  private String classPackage;
  
  public ClientTemplate(final String targetPath, final String classPackage) {
    this.targetPath = targetPath;
    this.classPackage = classPackage;
  }
  
  @Override
  public String getFileName(final InformationModel context) {
    return "Client.java";
  }
  
  @Override
  public String getPath(final InformationModel context) {
    return this.targetPath;
  }
  
  @Override
  public String getContent(final InformationModel context, final InvocationContext invocationContext) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package ");
    _builder.append(this.classPackage, "");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("import com.fasterxml.jackson.core.JsonProcessingException;");
    _builder.newLine();
    _builder.append("import com.fasterxml.jackson.databind.ObjectMapper;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.eclipse.californium.core.CoapResponse;");
    _builder.newLine();
    _builder.append("import org.eclipse.californium.core.coap.MediaTypeRegistry;");
    _builder.newLine();
    _builder.append("import org.eclipse.californium.core.coap.Request;");
    _builder.newLine();
    _builder.append("import org.eclipse.californium.core.coap.Response;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import java.io.IOException;");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class Client {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public static int ct = MediaTypeRegistry.APPLICATION_JSON;");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public static Response sendRequest(String uri, CoapMethod method, byte[] payload){");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("final Request request = newRequest(method);");
    _builder.newLine();
    _builder.append("        ");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("if (request == null) {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("// TODO: 02.02.16 define error code");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("return null;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("        ");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("request.setURI(uri);");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("request.setPayload(payload);");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("request.getOptions().setContentFormat(ct);");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("request.send();");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("Response response;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("try {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("response = request.waitForResponse();");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("} catch (InterruptedException e) {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("e.printStackTrace();");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("// TODO: 02.02.16 define error handling");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("return null;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return response;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public static Response sendRequest(String uri, CoapMethod method){");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("final Request request = newRequest(method);");
    _builder.newLine();
    _builder.append("        ");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("if (request == null) {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("// TODO: 02.02.16 define error code");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("return null;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("        ");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("request.setURI(uri);");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("request.send();");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("Response response;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("try {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("response = request.waitForResponse();");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("} catch (InterruptedException e) {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("e.printStackTrace();");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("// TODO: 02.02.16 define error handling");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("return null;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return response;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public static boolean isValidResponseWithPayload(Response response){");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("if(response != null) {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("if (response.getCode().value < 100) {");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("if (response.getPayload() != null) {");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("if(response.getPayloadSize() >0 ){");
    _builder.newLine();
    _builder.append("                        ");
    _builder.append("return true;");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return false;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public static boolean isValidResponseWithPayload(CoapResponse response){");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("if(response != null) {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("if (response.getCode().value < 100) {");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("if (response.getPayload() != null) {");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("return true;");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return false;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("private static Request newRequest(CoapMethod method) {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("switch (method) {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("            ");
    _builder.append("case GET:");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("return Request.newGet();");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("case POST:");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("return Request.newPost();");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("case PUT:");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("return Request.newPut();");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("case DELETE:");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("return Request.newDelete();");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("case OBSERVE:");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("Request request = Request.newGet();");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("request.setObserve();");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("return request;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("case DISCOVER:");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("return Request.newGet();");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return null;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("* Collection of available transformer to deserialize payload for CoAP");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("*");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("* @param valueType   POJO class");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("* @param payload     serialized data");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("* @return object representation of data");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public static Object deserializePayload(Class<?> valueType, byte[] payload) {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("ObjectMapper mapper = new ObjectMapper();");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("Object value = null;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("try {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("value = mapper.readValue(payload, valueType);");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("} catch (IOException e) {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("e.printStackTrace();");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return value;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("* Collection of available transformers to serialize payload for CoAP");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("*");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("* @param value       object representation of data");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("* @return serialized representation of data");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public static byte[] serializePayload(Object value) {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("ObjectMapper mapper = new ObjectMapper();");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("byte[] serialized = null;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("try {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("serialized = mapper.writeValueAsBytes(value);");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("} catch (JsonProcessingException e) {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("e.printStackTrace();");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return serialized;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder.toString();
  }
}
